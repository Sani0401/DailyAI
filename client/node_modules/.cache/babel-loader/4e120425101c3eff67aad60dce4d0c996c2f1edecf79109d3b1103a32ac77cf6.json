{"ast":null,"code":"import React,{useState}from\"react\";import\"../styles/inputComponent.css\";import imageIcon from\"../Images/gandhijiImage.png\";import Instance from\"../config/axiosInstance\";import apiUrl from\"../config/apiURL\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function InputComponent(){const[query,setQuery]=useState(\"\");const[questions,setQuestions]=useState([]);const[answers,setAnswers]=useState([]);const[loadingAnswers,setLoadingAnswers]=useState([]);// State to track loading status for each answer\nconst handleQuery=async()=>{const questionIndex=questions.length;// Index of the current question\nsetQuestions([...questions,query]);const searchQuery={query:query};setLoadingAnswers([...loadingAnswers,true]);// Set loading status for current answer\ntry{const response=await Instance.post(apiUrl.getAnswer,searchQuery);setAnswers([...answers,response.data.response.response]);// Add the answer to the answers array\n}catch(error){console.error(\"Error occurred while fetching answer:\",error);}setLoadingAnswers(prevLoading=>{// Update loading status for the current question to false\nconst updatedLoading=[...prevLoading];updatedLoading[questionIndex]=false;return updatedLoading;});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"main__Container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"questionAnswers\",children:questions.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"finalDiv\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"imageQuestions\",children:[/*#__PURE__*/_jsx(\"img\",{src:imageIcon,className:\"imageIcon\",alt:\"Gandhiji\"}),/*#__PURE__*/_jsx(\"p\",{className:\"introWords\",children:question})]}),loadingAnswers[index]&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"answer\",children:answers[index]})]},index))})}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Ask questions here?\",className:\"questionInput\",value:query,onChange:e=>{setQuery(e.target.value);},onKeyDown:e=>{if(e.key===\"Enter\"){handleQuery();setQuery(\"\");}}})]});}export default InputComponent;","map":{"version":3,"names":["React","useState","imageIcon","Instance","apiUrl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InputComponent","query","setQuery","questions","setQuestions","answers","setAnswers","loadingAnswers","setLoadingAnswers","handleQuery","questionIndex","length","searchQuery","response","post","getAnswer","data","error","console","prevLoading","updatedLoading","children","className","map","question","index","src","alt","placeholder","value","onChange","e","target","onKeyDown","key"],"sources":["C:/Users/sanip/OneDrive/Desktop/HUSHH/client/src/component/InputComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/inputComponent.css\";\r\nimport imageIcon from \"../Images/gandhijiImage.png\";\r\nimport Instance from \"../config/axiosInstance\";\r\nimport apiUrl from \"../config/apiURL\";\r\n\r\nfunction InputComponent() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loadingAnswers, setLoadingAnswers] = useState([]); // State to track loading status for each answer\r\n\r\n  const handleQuery = async () => {\r\n    const questionIndex = questions.length; // Index of the current question\r\n\r\n    setQuestions([...questions, query]);\r\n\r\n    const searchQuery = {\r\n      query: query,\r\n    };\r\n\r\n    setLoadingAnswers([...loadingAnswers, true]); // Set loading status for current answer\r\n\r\n    try {\r\n      const response = await Instance.post(apiUrl.getAnswer, searchQuery);\r\n      setAnswers([...answers, response.data.response.response]); // Add the answer to the answers array\r\n    } catch (error) {\r\n      console.error(\"Error occurred while fetching answer:\", error);\r\n    }\r\n\r\n    setLoadingAnswers((prevLoading) => {\r\n      // Update loading status for the current question to false\r\n      const updatedLoading = [...prevLoading];\r\n      updatedLoading[questionIndex] = false;\r\n      return updatedLoading;\r\n    });\r\n \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main__Container\">\r\n        <div className=\"questionAnswers\">\r\n          {questions.map((question, index) => (\r\n            <div key={index} className=\"finalDiv\">\r\n              <label className=\"imageQuestions\">\r\n                <img src={imageIcon} className=\"imageIcon\" alt=\"Gandhiji\" />\r\n                <p className=\"introWords\">{question}</p>\r\n              </label>\r\n              {loadingAnswers[index] && <p>Loading...</p>}\r\n              <p className=\"answer\">{answers[index]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        placeholder=\"Ask questions here?\"\r\n        className=\"questionInput\"\r\n        value={query}\r\n        onChange={(e) => {\r\n          setQuery(e.target.value);\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            handleQuery();\r\n            setQuery(\"\");\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}