{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanip\\\\OneDrive\\\\Desktop\\\\submission\\\\client\\\\src\\\\component\\\\InputComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/inputComponent.css\";\nimport imageIcon from \"../Images/gandhijiImage.png\";\nimport Instance from \"../config/axiosInstance\";\nimport apiUrl from \"../config/apiURL\";\nimport { Button } from \"react-bootstrap\";\nimport arrowIcon from \"../Images/right-arrow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputComponent() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [loadingAnswers, setLoadingAnswers] = useState([]); // State to track loading status for each answer\n\n  const handleQuery = async () => {\n    const questionIndex = questions.length; // Index of the current question\n\n    setQuestions([...questions, query]);\n    const searchQuery = {\n      query: query\n    };\n    setLoadingAnswers([...loadingAnswers, true]); // Set loading status for current answer\n\n    try {\n      const response = await Instance.post(apiUrl.getAnswer, searchQuery);\n      setAnswers([...answers, response.data.response.response]); // Add the answer to the answers array\n    } catch (error) {\n      console.error(\"Error occurred while fetching answer:\", error);\n    }\n    setLoadingAnswers(prevLoading => {\n      // Update loading status for the current question to false\n      const updatedLoading = [...prevLoading];\n      updatedLoading[questionIndex] = false;\n      return updatedLoading;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionAnswers\",\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finalDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"imageQuestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageIcon,\n              className: \"imageIcon\",\n              alt: \"Gandhiji\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"introWords\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), loadingAnswers[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"answer\",\n            children: answers[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputContainer\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Ask questions here?\",\n        className: \"questionInput\",\n        value: query,\n        onChange: e => {\n          setQuery(e.target.value);\n        },\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            handleQuery();\n            setQuery(\"\");\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: arrowIcon,\n        className: \"right-arrow\",\n        onClick: () => {\n          setQuery(\"\"); // Clear the query input\n          handleQuery(); // Call the handleQuery function\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputComponent, \"wiTC/XiJbV75eUd78QyXdtOoe0g=\");\n_c = InputComponent;\nexport default InputComponent;\nvar _c;\n$RefreshReg$(_c, \"InputComponent\");","map":{"version":3,"names":["React","useState","imageIcon","Instance","apiUrl","Button","arrowIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","InputComponent","_s","query","setQuery","questions","setQuestions","answers","setAnswers","loadingAnswers","setLoadingAnswers","handleQuery","questionIndex","length","searchQuery","response","post","getAnswer","data","error","console","prevLoading","updatedLoading","children","className","map","question","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sanip/OneDrive/Desktop/submission/client/src/component/InputComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/inputComponent.css\";\r\nimport imageIcon from \"../Images/gandhijiImage.png\";\r\nimport Instance from \"../config/axiosInstance\";\r\nimport apiUrl from \"../config/apiURL\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport arrowIcon from \"../Images/right-arrow.png\";\r\n\r\nfunction InputComponent() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loadingAnswers, setLoadingAnswers] = useState([]); // State to track loading status for each answer\r\n\r\n  const handleQuery = async () => {\r\n    const questionIndex = questions.length; // Index of the current question\r\n\r\n    setQuestions([...questions, query]);\r\n\r\n    const searchQuery = {\r\n      query: query,\r\n    };\r\n\r\n    setLoadingAnswers([...loadingAnswers, true]); // Set loading status for current answer\r\n\r\n    try {\r\n      const response = await Instance.post(apiUrl.getAnswer, searchQuery);\r\n      setAnswers([...answers, response.data.response.response]); // Add the answer to the answers array\r\n    } catch (error) {\r\n      console.error(\"Error occurred while fetching answer:\", error);\r\n    }\r\n\r\n    setLoadingAnswers((prevLoading) => {\r\n      // Update loading status for the current question to false\r\n      const updatedLoading = [...prevLoading];\r\n      updatedLoading[questionIndex] = false;\r\n      return updatedLoading;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main__Container\">\r\n        <div className=\"questionAnswers\">\r\n          {questions.map((question, index) => (\r\n            <div key={index} className=\"finalDiv\">\r\n              <label className=\"imageQuestions\">\r\n                <img src={imageIcon} className=\"imageIcon\" alt=\"Gandhiji\" />\r\n                <p className=\"introWords\">{question}</p>\r\n              </label>\r\n              {loadingAnswers[index] && <p>Loading...</p>}\r\n              <p className=\"answer\">{answers[index]}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <label className=\"inputContainer\">\r\n        {\" \"}\r\n        <input\r\n          placeholder=\"Ask questions here?\"\r\n          className=\"questionInput\"\r\n          value={query}\r\n          onChange={(e) => {\r\n            setQuery(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleQuery();\r\n              setQuery(\"\");\r\n            }\r\n          }}\r\n        />\r\n        <img\r\n          src={arrowIcon}\r\n          className=\"right-arrow\"\r\n          onClick={() => {\r\n            setQuery(\"\"); // Clear the query input\r\n            handleQuery(); // Call the handleQuery function\r\n          }}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}